import json
from datetime import datetime
from telebot import TeleBot

GAMES_FILE = "base/games.json"
MAX_MESSAGE_LENGTH = 4096


def show_upcoming_games(bot: TeleBot, message):
    try:
        with open(GAMES_FILE, "r", encoding="utf-8") as f:
            games = json.load(f)
    except (FileNotFoundError, json.JSONDecodeError):
        bot.send_message(message.chat.id, "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∏–≥—Ä.")
        return

    today = datetime.today().date()
    valid_games = {}

    # –§–∏–ª—å—Ç—Ä—É–µ–º –∏ —É–¥–∞–ª—è–µ–º —É—Å—Ç–∞—Ä–µ–≤—à–∏–µ –∏–≥—Ä—ã
    for name, game in games.items():
        try:
            game_date = datetime.strptime(game["date"], "%d.%m.%Y").date()
            if game_date >= today:
                valid_games[name] = game
        except ValueError:
            continue  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞—Ç—ã

    # –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–∞–π–ª –±–µ–∑ —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö –∏–≥—Ä
    with open(GAMES_FILE, "w", encoding="utf-8") as f:
        json.dump(valid_games, f, ensure_ascii=False, indent=4)

    if not valid_games:
        bot.send_message(message.chat.id, "üì≠ –ù–µ—Ç –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏—Ö –∏–≥—Ä.")
        return

    # –°–æ—Ä—Ç–∏—Ä—É–µ–º –∏–≥—Ä—ã –ø–æ –¥–∞—Ç–µ
    sorted_games = sorted(
        valid_games.values(),
        key=lambda g: datetime.strptime(g["date"], "%d.%m.%Y")
    )

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –æ—Ç—á—ë—Ç–æ–≤
    messages = []
    current_message = ""

    for game in sorted_games:
        summary = (
            f"üé≤ *{game['game_name']}*\n"
            f"üóì {game['date']} ({game['weekday']})\n"
            f"üïì {game['time']}\n"
            f"üë• –ò–≥—Ä–æ–∫–æ–≤: {game['players']}, –†–µ–∑–µ—Ä–≤: {game['reserve']}\n"
            f"üìö –û–±—É—á–µ–Ω–∏–µ: {game['training']}, –ü–∞—Ä—Ç–∏—è: {game['party']}\n"
            f"üí¨ {game['comment']}\n\n"
        )

        if len(current_message) + len(summary) > MAX_MESSAGE_LENGTH:
            messages.append(current_message)
            current_message = summary
        else:
            current_message += summary

    if current_message:
        messages.append(current_message)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
    for msg in messages:
        bot.send_message(message.chat.id, msg, parse_mode="Markdown")
